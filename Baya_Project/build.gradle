/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */


plugins {
    id 'java'
    id 'war'
    id 'org.hidetake.ssh' version '2.11.2'
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo1.maven.org/maven2/'
    }
}


group = 'com.baya'
version = '1.0-SNAPSHOT'
description = 'Noithat'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

ext {
    junitVersion = '5.11.0'
}

sourceCompatibility = '21'
targetCompatibility = '21'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:1.2.7'
    implementation 'com.auth0:java-jwt:3.18.2'
    implementation 'org.jdbi:jdbi3-core:3.20.0'
    implementation 'mysql:mysql-connector-java:8.0.25'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0'
    implementation 'org.json:json:20210307'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.google.oauth-client:google-oauth-client:1.31.5'
    implementation 'com.google.api-client:google-api-client:1.32.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.1'
    implementation 'org.apache.httpcomponents:httpmime:4.5.13'
    implementation 'org.mindrot:jbcrypt:0.3m'
    implementation 'org.apache.poi:poi-ooxml:5.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
}


group = 'com.baya'
version = '1.0-SNAPSHOT'
description = 'Noithat'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}



tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}


war {
    archiveFileName = 'noithat.war' // Tên file .war
}

test {
    useJUnitPlatform()
}

apply plugin: 'org.hidetake.ssh'
ssh.settings {
    knownHosts = allowAnyHosts
}

remotes {
    host {
        host = '103.163.118.95'
        user = 'root'
        password = '8eCJ3*kU6wpbQyf'
    }
}
task deploy {
    doLast {
        println 'begin docker_app_start'
        ssh.run {
            session(remotes.host) {
                execute 'docker stop tomcat', ignoreError: true
//                execute 'docker run -it --rm -d ' +
//                        '--name tomcat ' +
//                        '-v /home/phuc/deploy:/usr/local/tomcat/webapps ' +
//                        '-p 80:8080 ' +
//                        'tomcat:10.1.17-jre21'

                execute 'docker run -it --rm -d ' +
                        '--name tomcat ' +
                        '-v /home/phuc/deploy:/usr/local/tomcat/webapps ' +
                        '-p 8080:8080 ' +'--network web-network ' +
                        'tomcat:10.1.17-jre21'
            }
        }
    }
}

task docker_upload_file_to_server {
    doLast {
        println 'begin docker_upload_file_to_server'
        ssh.run {
            session(remotes.host) {
                // Tạo thư mục nếu chưa có
                execute 'mkdir -p /home/phuc/deploy'
                execute 'rm -f /home/phuc/deploy/ROOT.war', ignoreError: true

                put from: "${project.projectDir}/build/libs/noithat.war",
                        into: "/home/phuc/deploy/ROOT.war"
            }
        }
    }
}

task mysql_import_sql_to_container {
    doLast {
        println 'Importing SQL file into MySQL container...'
        ssh.run {
            session(remotes.host) {
                // Bước 1: copy file từ host máy chủ vào container
                execute "docker cp /home/phuc/deploy/csdl_noithat.sql mysql:/tmp/csdl_noithat.sql"

                // Bước 2: import file SQL bằng cat | mysql
                execute "docker exec mysql bash -c 'mysql -u root -p123 < /tmp/csdl_noithat.sql'"

                // Bước 3: xóa file sau khi import
                execute "docker exec mysql rm /tmp/csdl_noithat.sql"
            }
        }
    }
}
task mysql_upload_sql_file_to_server {
    doLast {
        println 'Uploading SQL file to server...'
        ssh.run {
            session(remotes.host) {
                execute 'mkdir -p /home/phuc/deploy'
                execute 'rm -f /home/phuc/deploy/csdl_noithat.sql', ignoreError: true

                put from: "${project.projectDir}/csdl_noithat.sql",
                        into: "/home/phuc/deploy/csdl_noithat.sql"
            }
        }
    }
}



task docker_deploy {
    dependsOn build, docker_upload_file_to_server, deploy
//    tasks.getByName('docker_upload_file_to_server').mustRunAfter build
//    tasks.getByName('deploy').mustRunAfter docker_upload_file_to_server
}